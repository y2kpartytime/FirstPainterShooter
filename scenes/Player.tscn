[gd_scene load_steps=4 format=3 uid="uid://c0p6vapt7f7ul"]

[sub_resource type="GDScript" id="GDScript_whaw8"]
resource_name = "PlayerScript"
script/source = "extends CharacterBody3D


const SPEED = 5.0
const JUMP_VELOCITY = 4.5


func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir := Input.get_vector(\"Left\", \"Right\", \"Forward\", \"Backward\")
	var direction := (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)

	move_and_slide()
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_q0peq"]

[sub_resource type="CylinderMesh" id="CylinderMesh_v3we8"]

[node name="CharacterBody3D" type="CharacterBody3D"]
script = SubResource("GDScript_whaw8")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_q0peq")

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0)

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(0.199514, 0.0286276, -0.00146907, 0, -0.0435215, -0.198886, -0.0139408, 0.409702, -0.0210245, 0.282716, 0.729048, -0.311)
mesh = SubResource("CylinderMesh_v3we8")
